name: Build and Test

on:
    - pull_request

jobs:
    install_full_workspace:
        runs-on: ubuntu-latest

        env:
            UNSKIP_DECR: 'false' # do not decrypt the .env files

        steps:
            - name: Checkout
              uses: actions/checkout@v2
              with:
                  persist-credentials: false

            - name: Setup Node
              uses: actions/setup-node@v2
              with:
                  node-version: '16'

            - name: Restore Node_Modules # this step improves the yarn installation of node_modules by a significant amount
              id: restore-node-modules
              uses: actions/cache@v2
              with:
                  key: ${{runner.os}}-node-modules-${{hashFiles('**/package.json')}}
                  path: |
                      cms/node_modules
                      site/node_modules
                      search/cloudflare/node_modules
                      webhooks/strapi/node_modules
                  restore-keys: |
                      ${{ runner.os }}-node-modules-

            - name: Get yarn cache directory path
              id: yarn-cache-dir-path
              if: steps.restore-node-modules.outputs.cache-hit != 'true'
              run: echo "::set-output name=dir::$(yarn cache dir)"

            - name: Restore Yarn Cache
              id: root-yarn-cache
              if: steps.restore-node-modules.outputs.cache-hit != 'true'
              uses: actions/cache@v2
              with:
                  path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
                  key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}-v2.3
                  restore-keys: |
                      ${{ runner.os }}-yarn-

            - name: Install Root (Lerna) Dependencies
              run: yarn install --ignore-scripts
              env:
                  NODE_ENV: development # otherwise dev dependencies are skipped

            - name: Install Packages Dependencies
              run: yarn bootstrap --ignore puppeteer
              env:
                  PUPPETEER_SKIP_CHROMIUM_DOWNLOAD: 'true' # recheck working
                  NODE_ENV: development
            #
            - name: Bootstrap CMS Database
              run: yarn bootstrap
              working-directory: cms

            - name: Cache cms Folder
              uses: actions/cache@v2
              id: cms-dir-cache
              with:
                  path: cms
                  key: cms-${{github.sha}}

            - name: Cache site Folder
              uses: actions/cache@v2
              id: site-dir-cache
              with:
                  path: site
                  key: site-${{github.sha}}

            - name: Cache webhooks/strapi
              uses: actions/cache@v2
              id: strapi-dir-cache
              with:
                  path: webhooks/strapi
                  key: webhooks-strapi-${{github.sha}}

            - name: Cache search/cloudflare
              uses: actions/cache@v2
              id: search-cloudflare-dir-cache
              with:
                  path: search/cloudflare
                  key: search-cloudflare-${{github.sha}}

    build_cms:
        runs-on: ubuntu-latest
        needs: install_full_workspace
        env:
            NODE_ENV: production
            UNSKIP_DECR: 'false'

        defaults:
            run:
                working-directory: cms

        steps:
            - name: restore cache
              uses: actions/cache@v2
              id: restore-cms-build
              with:
                  path: cms
                  key: cms-${{github.sha}}

            - name: build cms dashboard
              run: yarn build

    test_cms:
        runs-on: ubuntu-latest
        needs: install_full_workspace

        defaults:
            run:
                working-directory: cms
        steps:
            - name: restore cache
              uses: actions/cache@v2
              id: restore-cms-test
              with:
                  path: cms
                  key: cms-${{github.sha}}

            - name: API Tests
              run: yarn test --ci --coverage --coverageReporters="text-summary"

            - name: save tests code coverage
              uses: actions/upload-artifact@v2
              with:
                  name: backend-integration-test-coverage-${{github.sha}}
                  path: cms/coverage

    build_site:
        runs-on: ubuntu-latest
        needs: install_full_workspace

        steps:
            - name: restore site cache
              uses: actions/cache@v2
              id: restore-site-build
              with:
                  path: site
                  key: site-${{github.sha}}

            - name: restore cms cache
              uses: actions/cache@v2
              id: restore-cms
              with:
                  path: cms
                  key: cms-${{github.sha}}

            - name: start cms server
              run: |
                  cd cms/
                  yarn pm2 start "yarn strapi start"

            - name: build nextjs site
              run: |
                  cd site/
                  yarn build

    test_unit_site:
        runs-on: ubuntu-latest
        needs: install_full_workspace
        defaults:
            run:
                working-directory: site

        steps:
            - name: restore site
              uses: actions/cache@v2
              id: restore-site-unit-test
              with:
                  path: site
                  key: site-${{github.sha}}

            - name: Run Unit Tests
              run: yarn test:unit --ci --coverage --coverageReporters="text-summary"

    build_search_cloudflare:
        runs-on: ubuntu-latest
        needs: install_full_workspace
        env:
            NODE_ENV: production
        defaults:
            run:
                working-directory: search/cloudflare

        steps:
            - name: Restore search/cloudflare
              uses: actions/cache@v2
              id: restore-search-cloudflare-build
              with:
                  path: search/cloudflare
                  key: search-cloudflare-${{github.sha}}

            - name: Build worker.js
              run: yarn build

    test_search_cloudflare:
        runs-on: ubuntu-latest
        needs: install_full_workspace
        env:
            NODE_ENV: production
        defaults:
            run:
                working-directory: search/cloudflare

        steps:
            - name: Restore search/cloudflare
              uses: actions/cache@v2
              id: restore-search-cloudflare-test
              with:
                  path: search/cloudflare
                  key: search-cloudflare-${{github.sha}}

            - name: Test Cloudflare Worker
              run: yarn test

    build_webhook_hapi:
        runs-on: ubuntu-latest
        needs: install_full_workspace
        env:
            NODE_ENV: production
        defaults:
            run:
                working-directory: webhooks/strapi

        steps:
            - name: Restore webhooks/strapi cache
              uses: actions/cache@v2
              id: restore-webhook-strapi-build
              with:
                  path: webhooks/strapi
                  key: webhooks-strapi-${{github.sha}}

            - name: Build Hapi
              run: yarn build

    test_webhook_hapi:
        runs-on: ubuntu-latest
        needs:
            - install_full_workspace
        env:
            NODE_ENV: production
        defaults:
            run:
                working-directory: webhooks/strapi
        steps:
            - name: Restore webhooks/strapi cache
              uses: actions/cache@v2
              id: restore-webhook-strapi-test
              with:
                  path: webhooks/strapi
                  key: webhooks-strapi-${{github.sha}}

            - name: Test Hapi
              run: yarn test
